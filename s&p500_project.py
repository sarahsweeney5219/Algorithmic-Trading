# -*- coding: utf-8 -*-
"""S&P500_Project.ipynb

Automatically generated by Colaboratory.

"""

#Build alternative version of S&P 500 Index Fund where each stock is equally
#weighted (instead of by market cap) based on user's portfolio size

import numpy as np
import pandas as pd
import requests
import math

#importing our list of 500 stocks
stocks = pd.read_csv('sp_500_stocks.csv') #csv file listing all the tickers in the s&p500 (505 because of dual class shares)
stocks

#IEX Cloud Sandbox API key 
#IEX Cloud generates random finanical data for practice -- not accurate
api_token = '****' #this is where you would insert your own unique api token

my_columns = ['Ticker', 'Stock Price', 'Market Capitalization', 'Number of Shares to Buy']
df = pd.DataFrame(columns = my_columns)
df

#batch api call

#function courtesy of stackoverflow
def chunks(lst,n):
  for i in range(0, len(lst), n):
    yield lst[i:i+n]

symbol_groups = list(chunks(stocks['Ticker'],100))
symbol_strings = []
for i in range(0, len(symbol_groups)):
  symbol_strings.append(','.join(symbol_groups[i]))
df = pd.DataFrame(columns = my_columns)
for symbol_string in symbol_strings:
  batch_api_call_url = f'https://sandbox.iexapis.com/stable/stock/market/batch?symbols={symbol_string}&types=quote&token={api_token}'
  data = requests.get(batch_api_call_url).json()
  for symbol in symbol_string.split(','):
    df = df.append(
        pd.Series(
            [
             symbol,
             data[symbol]['quote']['latestPrice'],
             data[symbol]['quote']['marketCap'],
             'N/A'
            ],
            index = my_columns
        ),
        ignore_index=True
    )

df

while True:
  portfolio_size = input('Enter value of your portfolio:')
  try:
    portfolio_size = float(portfolio_size)
    break
  except ValueError:
    print('Please enter a numeric input.')

position_size = portfolio_size/len(df.index) #len df = # of stocks 
for i in range(0, len(df.index)):
  df.loc[i, 'Number of Shares to Buy'] = math.floor(position_size/df.loc[i, 'Stock Price'] )

df
#returns a dataframe listing all 505 tickers in the s&p 500, their price, market cap, and the # of shares
#you would have to purchase of each to have your portfolio equally weighted across the S&P500.



